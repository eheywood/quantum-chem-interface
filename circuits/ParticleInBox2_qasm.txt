// Generated from Cirq v1.3.0

OPENQASM 2.0;
include "qelib1.inc";


// Qubits: [q(3), q(2), q(1), q(0)]
qreg q[4];
creg m_meas[3];


ry(0) q[2];

// Operation: CRy(0.0π)(q(1), q(2))
cx q[2],q[1];
cx q[2],q[1];

// Operation: C0Ry(0.5548848997071034π)(q(1), q(2))
x q[2];
u3(0,pi*0.5,pi*0.5) q[1];
cx q[2],q[1];
u3(pi*0.2774424499,0,0) q[1];
cx q[2],q[1];
u3(pi*1.7225575501,pi*1.0,0) q[1];
x q[2];

// Operation: CCRy(0.0π)(q(1), q(2), q(3))
cx q[1],q[0];
cx q[1],q[0];
cx q[2],q[0];
cx q[1],q[0];
cx q[1],q[0];
cx q[2],q[0];
cx q[1],q[0];
cx q[1],q[0];

// Operation: C1C0Ry(0.0π)(q(1), q(2), q(3))
x q[1];
cx q[1],q[0];
cx q[1],q[0];
cx q[2],q[0];
cx q[1],q[0];
cx q[1],q[0];
cx q[2],q[0];
cx q[1],q[0];
cx q[1],q[0];
x q[1];

// Operation: C0C1Ry(0.0π)(q(1), q(2), q(3))
x q[2];
cx q[1],q[0];
cx q[1],q[0];
cx q[2],q[0];
cx q[1],q[0];
cx q[1],q[0];
cx q[2],q[0];
cx q[1],q[0];
cx q[1],q[0];
x q[2];

// Operation: C0C0Ry(π)(q(1), q(2), q(3))
x q[2];
x q[1];
cx q[1],q[0];
u3(0,pi*1.0,pi*0.5) q[0];
cx q[1],q[0];
u3(0,0,pi*0.5) q[0];
cx q[2],q[0];
u3(0,pi*0.5,pi*0.5) q[0];
cx q[1],q[0];
u3(pi*0.25,0,0) q[0];
cx q[1],q[0];
u3(pi*1.75,pi*1.0,0) q[0];
cx q[2],q[0];
u3(0,0,pi*0.5) q[0];
cx q[1],q[0];
u3(pi*0.25,0,pi*0.5) q[0];
cx q[1],q[0];
u3(pi*1.75,pi*1.0,0) q[0];
x q[2];
x q[1];

rz(pi*1.99) q[0];

// Gate: qft[norev]
h q[2];
t q[1];
u3(0,pi*1.25,pi*0.5) q[2];
cx q[1],q[2];
u3(0,pi*1.25,pi*0.5) q[2];
cx q[1],q[2];
u3(0,0,pi*0.5) q[2];
h q[1];
u3(pi*0.5,0,pi*0.75) q[0];
u3(pi*0.5,0,pi*0.25) q[1];
sx q[0];
cx q[0],q[1];
rx(pi*0.25) q[0];
ry(pi*0.5) q[1];
cx q[1],q[0];
sxdg q[1];
s q[1];
cx q[0],q[1];
u3(pi*0.5,pi*0.5,pi*1.0) q[0];
u3(pi*0.5,pi*1.0,pi*1.0) q[1];
u3(pi*0.5,pi*1.0,pi*0.25) q[0];
u3(pi*0.5,pi*1.0,pi*0.75) q[2];
sx q[0];
cx q[0],q[2];
rx(pi*0.375) q[0];
ry(pi*0.5) q[2];
cx q[2],q[0];
sxdg q[2];
s q[2];
cx q[0],q[2];
u3(pi*0.5,pi*0.875,0) q[0];
u3(pi*0.5,pi*0.375,0) q[2];
h q[0];

rz(pi*0.0318309886) q[0];
rz(pi*0.0159154943) q[1];
rz(pi*0.0079577472) q[2];
cx q[1],q[3];
cx q[0],q[3];
rz(pi*0.0636619772) q[3];
cx q[0],q[3];
cx q[1],q[3];
cx q[2],q[3];
cx q[0],q[3];
rz(pi*0.0318309886) q[3];
cx q[0],q[3];
cx q[2],q[3];
cx q[2],q[3];
cx q[1],q[3];
rz(pi*0.0159154943) q[3];
cx q[1],q[3];
cx q[2],q[3];

// Gate: (cirq.QuantumFourierTransformGate(num_qubits=3, without_reverse=True)**-1)
ry(pi*0.25) q[0];
rx(pi*-1.0) q[0];
ry(pi*-0.25) q[0];
u3(pi*0.5,0,pi*0.25) q[0];
u3(pi*0.5,pi*1.0,pi*0.75) q[1];
sx q[0];
cx q[0],q[1];
rx(pi*0.25) q[0];
ry(pi*0.5) q[1];
cx q[1],q[0];
sxdg q[1];
s q[1];
cx q[0],q[1];
u3(pi*0.5,pi*0.5,pi*1.0) q[0];
u3(pi*0.5,pi*2.0,0) q[1];
u3(pi*0.5,0,pi*0.25) q[0];
u3(pi*0.5,pi*1.0,pi*0.75) q[2];
sx q[0];
cx q[0],q[2];
rx(pi*0.375) q[0];
ry(pi*0.5) q[2];
cx q[2],q[0];
sxdg q[2];
s q[2];
cx q[0],q[2];
u3(pi*0.5,pi*0.625,pi*1.0) q[0];
u3(pi*0.5,pi*0.125,0) q[2];
ry(pi*0.25) q[1];
rx(pi*-1.0) q[1];
ry(pi*-0.25) q[1];
tdg q[1];
u3(0,pi*1.75,pi*0.5) q[2];
cx q[1],q[2];
u3(0,pi*1.75,pi*0.5) q[2];
cx q[1],q[2];
u3(0,pi*1.0,pi*0.5) q[2];
ry(pi*0.25) q[2];
rx(pi*-1.0) q[2];
ry(pi*-0.25) q[2];

// Gate: cirq.MeasurementGate(3, cirq.MeasurementKey(name='meas'), ())
measure q[2] -> m_meas[0];
measure q[1] -> m_meas[1];
measure q[0] -> m_meas[2];
