// Generated from Cirq v1.3.0

OPENQASM 2.0;
include "qelib1.inc";


// Qubits: [q(2), q(1), q(0)]
qreg q[3];
creg m_measure_all[3];


ry(0) q[2];

// Operation: CRy(0.0π)(q(0), q(1))
cx q[2],q[1];
cx q[2],q[1];

// Operation: C0Ry(0.6666666666666667π)(q(0), q(1))
x q[2];
u3(0,pi*0.5,pi*0.5) q[1];
cx q[2],q[1];
u3(pi*0.3333333333,0,0) q[1];
cx q[2],q[1];
u3(pi*1.6666666667,pi*1.0,0) q[1];
x q[2];

// Operation: CCRy(0.0π)(q(0), q(1), q(2))
cx q[1],q[0];
cx q[1],q[0];
cx q[2],q[0];
cx q[1],q[0];
cx q[1],q[0];
cx q[2],q[0];
cx q[1],q[0];
cx q[1],q[0];

// Operation: C1C0Ry(0.0π)(q(0), q(1), q(2))
x q[1];
cx q[1],q[0];
cx q[1],q[0];
cx q[2],q[0];
cx q[1],q[0];
cx q[1],q[0];
cx q[2],q[0];
cx q[1],q[0];
cx q[1],q[0];
x q[1];

// Operation: C0C1Ry(0.6081734479693928π)(q(0), q(1), q(2))
x q[2];
cx q[1],q[0];
u3(0,pi*1.0,pi*0.5) q[0];
cx q[1],q[0];
u3(0,0,pi*0.5) q[0];
cx q[2],q[0];
u3(0,pi*0.5,pi*0.5) q[0];
cx q[1],q[0];
u3(pi*0.152043362,0,0) q[0];
cx q[1],q[0];
u3(pi*1.847956638,pi*1.0,0) q[0];
cx q[2],q[0];
u3(0,0,pi*0.5) q[0];
cx q[1],q[0];
u3(pi*0.152043362,0,pi*0.5) q[0];
cx q[1],q[0];
u3(pi*1.847956638,pi*1.0,0) q[0];
x q[2];

// Operation: C0C0Ry(π)(q(0), q(1), q(2))
x q[2];
x q[1];
cx q[1],q[0];
u3(0,pi*1.0,pi*0.5) q[0];
cx q[1],q[0];
u3(0,0,pi*0.5) q[0];
cx q[2],q[0];
u3(0,pi*0.5,pi*0.5) q[0];
cx q[1],q[0];
u3(pi*0.25,0,0) q[0];
cx q[1],q[0];
u3(pi*1.75,pi*1.0,0) q[0];
cx q[2],q[0];
u3(0,0,pi*0.5) q[0];
cx q[1],q[0];
u3(pi*0.25,0,pi*0.5) q[0];
cx q[1],q[0];
u3(pi*1.75,pi*1.0,0) q[0];
x q[2];
x q[1];

swap q[2],q[0];

// Gate: cirq.MeasurementGate(3, cirq.MeasurementKey(name='measure_all'), ())
measure q[2] -> m_measure_all[0];
measure q[1] -> m_measure_all[1];
measure q[0] -> m_measure_all[2];
